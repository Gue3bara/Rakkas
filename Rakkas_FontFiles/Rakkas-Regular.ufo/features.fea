# Prefix: Languagesystems
languagesystem DFLT dflt;
languagesystem arab dflt;
languagesystem latn dflt;
languagesystem latn ROM;
languagesystem latn MOL;

@DevaIMatras = [  ];

@DevaIMatras = [  ];

@behInit = [ dotlessbeh-ar.init beh-ar.init teh-ar.init theh-ar.init noon-ar.init yeh-ar.init yehHamzaabove-ar.init ];

@behInitAll1 = [ dotlessbeh-ar.init.all1 beh-ar.init.all1 teh-ar.init.all1 theh-ar.init.all1 noon-ar.init.all1 yeh-ar.init.all1 yehHamzaabove-ar.init.all1 ];

@behInitAll2 = [ dotlessbeh-ar.init.all2 beh-ar.init.all2 teh-ar.init.all2 theh-ar.init.all2 noon-ar.init.all2 yeh-ar.init.all2 yehHamzaabove-ar.init.all2 ];

@behMedi = [ dotlessbeh-ar.medi beh-ar.medi teh-ar.medi theh-ar.medi noon-ar.medi yeh-ar.medi yehHamzaabove-ar.medi ];

@behMediAll1 = [ dotlessbeh-ar.medi.all1 beh-ar.medi.all1 teh-ar.medi.all1 theh-ar.medi.all1 noon-ar.medi.all1 yeh-ar.medi.all1 yehHamzaabove-ar.medi.all1 ];

@behMediAll2 = [ dotlessbeh-ar.medi.all2 beh-ar.medi.all2 teh-ar.medi.all2 theh-ar.medi.all2 noon-ar.medi.all2 yeh-ar.medi.all2 yehHamzaabove-ar.medi.all2 ];

@behIsol = [ dotlessbeh-ar beh-ar teh-ar theh-ar ];

@behIsolAll1 = [ dotlessbeh-ar.all1 beh-ar.all1 teh-ar.all1 theh-ar.all1 ];

@jeemInit = [ jeem-ar.init hah-ar.init khah-ar.init ];

@jeemInitAll1 = [ jeem-ar.init.all1 hah-ar.init.all1 khah-ar.init.all1 ];

@jeemMedi = [ jeem-ar.medi hah-ar.medi khah-ar.medi ];

@jeemMediAll1 = [ jeem-ar.medi.all1 hah-ar.medi.all1 khah-ar.medi.all1 ];

@jeemMediAll2 = [ jeem-ar.medi.all2 hah-ar.medi.all2 khah-ar.medi.all2 ];

@jeemFinaAll1 = [ jeem-ar.fina.all1 hah-ar.fina.all1 khah-ar.fina.all1 ];

@jeemFina = [ jeem-ar.fina hah-ar.fina khah-ar.fina ];

@setBehInitAll1 = [ seen-ar.medi seen-ar.fina sheen-ar.medi sheen-ar.fina sheen-ar.fina.all1 sheen-ar.fina.all2 sad-ar.medi sad-ar.fina dad-ar.medi dad-ar.fina dad-ar.fina.all1 dad-ar.fina.all2 tah-ar.medi tah-ar.fina zah-ar.medi zah-ar.fina ain-ar.medi ain-ar.fina ghain-ar.medi ghain-ar.fina feh-ar.medi feh-ar.fina qaf-ar.medi qaf-ar.fina kaf-ar.medi kaf-ar.fina lam-ar.medi lam-ar.fina waw-ar.fina ];

@setJeemInitAll1 = [ jeem-ar.medi hah-ar.medi khah-ar.medi jeem-ar.fina hah-ar.fina khah-ar.fina reh-ar.fina zain-ar.fina meem-ar.medi meem-ar.fina heh-ar.fina dotlessyeh-ar.fina yeh-ar.fina alefMaksura-ar.fina yehHamzaabove-ar.fina ];

@alefFina = [ alef-ar.fina alef-ar.fina.short alefHamzaabove-ar.fina alefHamzabelow-ar.fina alefMadda-ar.fina alefWasla-ar.fina lam_alef-ar.fina lam_alefHamzaabove-ar.fina lam_alefHamzabelow-ar.fina lam_alefMadda-ar.fina lam_alefWasla-ar.fina ];

@ArDiacritics = [ hamzaaboveDamma-ar hamzaaboveDammatan-ar hamzaaboveSukun-ar dammatan-ar damma-ar shadda-ar sukun-ar shaddaAlefabove-ar shaddaDamma-ar shaddaDammatan-ar shaddaFatha-ar shaddaFathatan-ar shaddaKasra-ar shaddaKasratan-ar dammainverted-ar ];

@ArDiacriticsAlt = [ hamzaaboveDamma-ar.alt hamzaaboveDammatan-ar.alt hamzaaboveSukun-ar.alt dammatan-ar.alt damma-ar.alt shadda-ar.alt sukun-ar.alt shaddaAlefabove-ar.alt shaddaDamma-ar.alt shaddaDammatan-ar.alt shaddaFatha-ar.alt shaddaFathatan-ar.alt shaddaKasra-ar.alt shaddaKasratan-ar.alt dammainverted-ar.alt ];

@yehFina = [ dotlessyeh-ar.fina yeh-ar.fina alefMaksura-ar.fina yehHamzaabove-ar.fina ];

@yehFinaAll1 = [ dotlessyeh-ar.fina.all1 yeh-ar.fina.all1 alefMaksura-ar.fina.all1 yehHamzaabove-ar.fina.all1 ];

@ParentDefault = [ braceleft braceright bracketleft bracketright parenleft parenright ];

@ParentAlt = [ braceleft.alt braceright.alt bracketleft.alt bracketright.alt parenleft.alt parenright.alt ];

feature aalt {
# automatic
feature ccmp;
feature locl;
feature sups;
feature frac;
feature ordn;
feature case;
feature init;
feature medi;
feature fina;
feature rlig;
feature calt;
feature ss01;
feature ss02;
feature ss03;
feature ss04;
feature ss05;
feature ss06;
feature ss07;
feature ss08;
feature lnum;
feature onum;
feature ss09;
} aalt;

feature ccmp {
# automatic
lookup ccmp_arab_1 {
	script arab;
	sub hamzaabove-ar damma-ar by hamzaaboveDamma-ar;
	sub damma-ar hamzaabove-ar by hamzaaboveDamma-ar;
	sub hamzaabove-ar dammatan-ar by hamzaaboveDammatan-ar;
	sub dammatan-ar hamzaabove-ar by hamzaaboveDammatan-ar;
	sub hamzaabove-ar fatha-ar by hamzaaboveFatha-ar;
	sub fatha-ar hamzaabove-ar by hamzaaboveFatha-ar;
	sub hamzaabove-ar fathatan-ar by hamzaaboveFathatan-ar;
	sub fathatan-ar hamzaabove-ar by hamzaaboveFathatan-ar;
	sub hamzaabove-ar sukun-ar by hamzaaboveSukun-ar;
	sub sukun-ar hamzaabove-ar by hamzaaboveSukun-ar;
	sub hamzabelow-ar kasra-ar by hamzabelowKasra-ar;
	sub kasra-ar hamzabelow-ar by hamzabelowKasra-ar;
	sub hamzabelow-ar kasratan-ar by hamzabelowKasratan-ar;
	sub kasratan-ar hamzabelow-ar by hamzabelowKasratan-ar;
	sub shadda-ar alefabove-ar by shaddaAlefabove-ar;
	sub alefabove-ar shadda-ar by shaddaAlefabove-ar;
	sub shadda-ar damma-ar by shaddaDamma-ar;
	sub damma-ar shadda-ar by shaddaDamma-ar;
	sub shadda-ar dammatan-ar by shaddaDammatan-ar;
	sub dammatan-ar shadda-ar by shaddaDammatan-ar;
	sub shadda-ar fatha-ar by shaddaFatha-ar;
	sub fatha-ar shadda-ar by shaddaFatha-ar;
	sub shadda-ar fathatan-ar by shaddaFathatan-ar;
	sub fathatan-ar shadda-ar by shaddaFathatan-ar;
	sub shadda-ar kasra-ar by shaddaKasra-ar;
	sub kasra-ar shadda-ar by shaddaKasra-ar;
	sub shadda-ar kasratan-ar by shaddaKasratan-ar;
	sub kasratan-ar shadda-ar by shaddaKasratan-ar;
} ccmp_arab_1;
} ccmp;

feature locl {
# automatic
script latn;
language ROM;
sub Scedilla by Scommaaccent;
sub scedilla by scommaaccent;
sub Tcedilla by Tcommaaccent;
sub tcedilla by tcommaaccent;
language MOL;
sub Scedilla by Scommaaccent;
sub scedilla by scommaaccent;
sub Tcedilla by Tcommaaccent;
sub tcedilla by tcommaaccent;
} locl;

feature sups {
# automatic
sub one by onesuperior;
sub two by twosuperior;
sub three by threesuperior;
sub four by foursuperior;
} sups;

feature frac {
# automatic
sub one slash four by onequarter;
sub one slash two by onehalf;
sub three slash four by threequarters;
} frac;

feature ordn {
# automatic
sub [zero one two three four five six seven eight nine] [A a]' by ordfeminine;
sub [zero one two three four five six seven eight nine] [O o]' by ordmasculine;
} ordn;

feature case {
# automatic
sub gravecomb by gravecomb.case;
sub acutecomb by acutecomb.case;
sub ogonekcomb by ogonekcomb.case;
sub hungarumlaut by hungarumlaut.case;
sub macron by macron.case;
} case;

feature init {
# automatic
sub dotlessbeh-ar by dotlessbeh-ar.init;
sub beh-ar by beh-ar.init;
sub teh-ar by teh-ar.init;
sub theh-ar by theh-ar.init;
sub jeem-ar by jeem-ar.init;
sub hah-ar by hah-ar.init;
sub khah-ar by khah-ar.init;
sub seen-ar by seen-ar.init;
sub sheen-ar by sheen-ar.init;
sub sad-ar by sad-ar.init;
sub dad-ar by dad-ar.init;
sub tah-ar by tah-ar.init;
sub zah-ar by zah-ar.init;
sub ain-ar by ain-ar.init;
sub ghain-ar by ghain-ar.init;
sub feh-ar by feh-ar.init;
sub veh-ar by veh-ar.init;
sub dotlessfeh-ar by dotlessfeh-ar.init;
sub qaf-ar by qaf-ar.init;
sub kaf-ar by kaf-ar.init;
sub lam-ar by lam-ar.init;
sub meem-ar by meem-ar.init;
sub noon-ar by noon-ar.init;
sub heh-ar by heh-ar.init;
sub yeh-ar by yeh-ar.init;
sub yehHamzaabove-ar by yehHamzaabove-ar.init;
sub kaf_meem-ar by kaf_meem-ar.init;
sub lam_meem-ar by lam_meem-ar.init;
} init;

feature medi {
# automatic
sub dotlessbeh-ar by dotlessbeh-ar.medi;
sub beh-ar by beh-ar.medi;
sub teh-ar by teh-ar.medi;
sub theh-ar by theh-ar.medi;
sub jeem-ar by jeem-ar.medi;
sub hah-ar by hah-ar.medi;
sub khah-ar by khah-ar.medi;
sub seen-ar by seen-ar.medi;
sub sheen-ar by sheen-ar.medi;
sub sad-ar by sad-ar.medi;
sub dad-ar by dad-ar.medi;
sub tah-ar by tah-ar.medi;
sub zah-ar by zah-ar.medi;
sub ain-ar by ain-ar.medi;
sub ghain-ar by ghain-ar.medi;
sub feh-ar by feh-ar.medi;
sub veh-ar by veh-ar.medi;
sub dotlessfeh-ar by dotlessfeh-ar.medi;
sub qaf-ar by qaf-ar.medi;
sub kaf-ar by kaf-ar.medi;
sub lam-ar by lam-ar.medi;
sub meem-ar by meem-ar.medi;
sub noon-ar by noon-ar.medi;
sub heh-ar by heh-ar.medi;
sub yeh-ar by yeh-ar.medi;
sub yehHamzaabove-ar by yehHamzaabove-ar.medi;
} medi;

feature fina {
# automatic
sub alef-ar by alef-ar.fina;
sub alefHamzaabove-ar by alefHamzaabove-ar.fina;
sub alefHamzabelow-ar by alefHamzabelow-ar.fina;
sub alefMadda-ar by alefMadda-ar.fina;
sub alefWasla-ar by alefWasla-ar.fina;
sub dotlessbeh-ar by dotlessbeh-ar.fina;
sub beh-ar by beh-ar.fina;
sub teh-ar by teh-ar.fina;
sub theh-ar by theh-ar.fina;
sub jeem-ar by jeem-ar.fina;
sub hah-ar by hah-ar.fina;
sub khah-ar by khah-ar.fina;
sub dal-ar by dal-ar.fina;
sub thal-ar by thal-ar.fina;
sub reh-ar by reh-ar.fina;
sub zain-ar by zain-ar.fina;
sub seen-ar by seen-ar.fina;
sub sheen-ar by sheen-ar.fina;
sub sad-ar by sad-ar.fina;
sub dad-ar by dad-ar.fina;
sub tah-ar by tah-ar.fina;
sub zah-ar by zah-ar.fina;
sub ain-ar by ain-ar.fina;
sub ghain-ar by ghain-ar.fina;
sub feh-ar by feh-ar.fina;
sub veh-ar by veh-ar.fina;
sub dotlessfeh-ar by dotlessfeh-ar.fina;
sub dotlessqaf-ar by dotlessqaf-ar.fina;
sub qaf-ar by qaf-ar.fina;
sub kaf-ar by kaf-ar.fina;
sub lam-ar by lam-ar.fina;
sub meem-ar by meem-ar.fina;
sub noon-ar by noon-ar.fina;
sub heh-ar by heh-ar.fina;
sub tehMarbuta-ar by tehMarbuta-ar.fina;
sub waw-ar by waw-ar.fina;
sub wawHamzaabove-ar by wawHamzaabove-ar.fina;
sub alefMaksura-ar by alefMaksura-ar.fina;
sub yeh-ar by yeh-ar.fina;
sub yehHamzaabove-ar by yehHamzaabove-ar.fina;
sub lam_alef-ar by lam_alef-ar.fina;
sub lam_alefHamzaabove-ar by lam_alefHamzaabove-ar.fina;
sub lam_alefHamzabelow-ar by lam_alefHamzabelow-ar.fina;
sub lam_alefMadda-ar by lam_alefMadda-ar.fina;
sub lam_alefWasla-ar by lam_alefWasla-ar.fina;
sub dotlessyeh-ar by dotlessyeh-ar.fina;
} fina;

feature rlig {
lookup dlig_RTL {
lookupflag IgnoreMarks RightToLeft;
	sub alef-ar lam-ar.init lam-ar.medi heh-ar.fina by allah-ar;
	sub lam-ar.init alef-ar.fina by lam_alef-ar;
	sub lam-ar.medi alef-ar.fina by lam_alef-ar.fina;
	sub lam-ar.init alefHamzaabove-ar.fina by lam_alefHamzaabove-ar;
	sub lam-ar.medi alefHamzaabove-ar.fina by lam_alefHamzaabove-ar.fina;
	sub lam-ar.init alefHamzabelow-ar.fina by lam_alefHamzabelow-ar;
	sub lam-ar.medi alefHamzabelow-ar.fina by lam_alefHamzabelow-ar.fina;
	sub lam-ar.init alefMadda-ar.fina by lam_alefMadda-ar;
	sub lam-ar.medi alefMadda-ar.fina by lam_alefMadda-ar.fina;
	sub lam-ar.init alefWasla-ar.fina by lam_alefWasla-ar;
	sub lam-ar.medi alefWasla-ar.fina by lam_alefWasla-ar.fina;
	sub alefHamzaabove-ar alefMaksura-ar.fina by alefHamzaabove_alefMaksura-ar;
	sub beh-ar.medi heh-ar.medi by beh_heh-ar.medi;
	sub beh-ar.init heh-ar.medi by beh_heh-ar.init;
	sub beh-ar.init alefMaksura-ar.fina by beh_alefMaksura-ar;
	sub beh-ar.init yeh-ar.fina by beh_yeh-ar;
	sub beh-ar.init yehHamzaabove-ar.fina by beh_yehHamzaabove-ar;
	sub teh-ar.medi heh-ar.medi by teh_heh-ar.medi;
	sub teh-ar.init heh-ar.medi by teh_heh-ar.init;
	sub teh-ar.init alefMaksura-ar.fina by teh_alefMaksura-ar;
	sub teh-ar.init yeh-ar.fina by teh_yeh-ar;
	sub teh-ar.init yehHamzaabove-ar.fina by teh_yehHamzaabove-ar;
	sub theh-ar.medi heh-ar.medi by theh_heh-ar.medi;
	sub theh-ar.init heh-ar.medi by theh_heh-ar.init;
	sub theh-ar.init alefMaksura-ar.fina by theh_alefMaksura-ar;
	sub theh-ar.init yeh-ar.fina by theh_yeh-ar;
	sub theh-ar.init yehHamzaabove-ar.fina by theh_yehHamzaabove-ar;
	sub feh-ar.init alefMaksura-ar.fina by feh_alefMaksura-ar;
	sub feh-ar.init yeh-ar.fina by feh_yeh-ar;
	sub feh-ar.init yehHamzaabove-ar.fina by feh_yehHamzaabove-ar;
	sub qaf-ar.init alefMaksura-ar.fina by qaf_alefMaksura-ar;
	sub qaf-ar.init yeh-ar.fina by qaf_yeh-ar;
	sub qaf-ar.init yehHamzaabove-ar.fina by qaf_yehHamzaabove-ar;
	sub kaf-ar.init jeem-ar.medi by kaf_jeem-ar.init;
	sub kaf-ar.init hah-ar.medi by kaf_hah-ar.init;
	sub kaf-ar.init khah-ar.medi by kaf_khah-ar.init;
	sub lam-ar.init jeem-ar.medi by lam_jeem-ar.init;
	sub lam-ar.init hah-ar.medi by lam_hah-ar.init;
	sub lam-ar.init khah-ar.medi by lam_khah-ar.init;
	sub kaf-ar.init meem-ar.fina by kaf_meem-ar;
	sub kaf-ar.init meem-ar.medi by kaf_meem-ar.init;
	sub kaf-ar.init alefMaksura-ar.fina by kaf_alefMaksura-ar;
	sub kaf-ar.init yeh-ar.fina by kaf_yeh-ar;
	sub kaf-ar.init yehHamzaabove-ar.fina by kaf_yehHamzaabove-ar;
	sub lam-ar.init meem-ar.fina by lam_meem-ar;
	sub lam-ar.init meem-ar.medi by lam_meem-ar.init;
	sub noon-ar.medi heh-ar.medi by noon_heh-ar.medi;
	sub noon-ar.init heh-ar.medi by noon_heh-ar.init;
	sub noon-ar.init alefMaksura-ar.fina by noon_alefMaksura-ar;
	sub noon-ar.init yeh-ar.fina by noon_yeh-ar;
	sub noon-ar.init yehHamzaabove-ar.fina by noon_yehHamzaabove-ar;
	sub yeh-ar.medi heh-ar.medi by yeh_heh-ar.medi;
	sub yeh-ar.init heh-ar.medi by yeh_heh-ar.init;
	sub yehHamzaabove-ar.medi heh-ar.medi by yehHamzaabove_heh-ar.medi;
	sub yehHamzaabove-ar.init heh-ar.medi by yehHamzaabove_heh-ar.init;
	sub yehHamzaabove-ar.init alefMaksura-ar.fina by yehHamzaabove_alefMaksura-ar;
	sub yehHamzaabove-ar.init yeh-ar.fina by yehHamzaabove_yeh-ar;
	sub yehHamzaabove-ar.init yehHamzaabove-ar.fina by yehHamzaabove_yehHamzaabove-ar;
	sub alef-ar lam-ar.init lam-ar.medi heh-ar.fina by allah-ar;
} dlig_RTL;
} rlig;

feature dlig {
sub f j by f_j;
sub f m by f_m;
sub f n by f_n;
sub f r by f_r;
sub f t by f_t;
sub f u by f_u;
sub g f by g_f;
sub g i by g_i;
sub t t by t_t;
sub T T by T_T;
} dlig;

feature liga {
# automatic
sub f f l by f_f_l;
sub f f i by f_f_i;
sub f i by fi;
sub f l by fl;
} liga;

feature calt {
#To replace the allograph form in instances of repeating beh forms
lookup multiple_behs {
	lookupflag IgnoreMarks RightToLeft;
	script arab;
sub [@behInit @behMedi sad-ar.init sad-ar.medi dad-ar.init dad-ar.medi tah-ar.init tah-ar.medi zah-ar.init zah-ar.medi @ArDiacritics @ArDiacriticsAlt] @behMedi' by @behMediAll1;
} multiple_behs; 

#To replace the initial allograph form of the beh shape group when followed by the jeem shape group
lookup behInit_jeem {
	lookupflag IgnoreMarks RightToLeft;
	script arab;
sub @behInit' @jeemMedi by @behInitAll2;
sub @behInitAll2 @jeemMedi' by @jeemMediAll1;
sub @behInit' @jeemFina by @behInitAll2;
sub @behInitAll2 @jeemFina' by @jeemFinaAll1;
} behInit_jeem;

#To replace the medial allograph form of the beh shape group when followed by the jeem shape group
lookup behMedi_jeem {
	lookupflag IgnoreMarks RightToLeft;
	script arab;
sub @behMedi' @jeemMedi by @behMediAll2;
sub @behMediAll2 @jeemMedi' by @jeemMediAll1;
sub @behMedi' @jeemFina by @behMediAll2;
sub @behMediAll2 @jeemFina' by @jeemFinaAll1;
} behMedi_jeem;

#To replace the inital allograph form of the beh shape group when followed by meem
lookup behInit_meem {
	lookupflag IgnoreMarks RightToLeft;
	script arab;
sub @behInit' meem-ar.medi by @behInitAll2;
sub @behInitAll2 meem-ar.medi' by meem-ar.medi.all2;
sub @behInit' meem-ar.fina by @behInitAll2;
sub @behInitAll2 meem-ar.fina' by meem-ar.fina.all2;
} behInit_meem;

#To replace the medial allograph form of the beh shape group when followed by meem
lookup behMedi_meem {
	lookupflag IgnoreMarks RightToLeft;
	script arab;
sub @behMedi' meem-ar.medi by @behMediAll2;
sub @behMediAll2 meem-ar.medi' by meem-ar.medi.all2;
sub @behMedi' meem-ar.fina by @behMediAll2;
sub @behMediAll2 meem-ar.fina' by meem-ar.fina.all2;
} behMedi_meem;

#To replace the inital allograph form of the beh shape group when followed by class @setBehInitAll1
lookup behInitAll1{
	lookupflag IgnoreMarks RightToLeft;
	script arab;
sub @behInit' @setBehInitAll1 by @behInitAll1;
} behInitAll1;

#To replace the inital allograph form of the jeem shape group when followed by class @jeemInitAll1
lookup jeemInitAll1 {
	lookupflag IgnoreMarks RightToLeft;
	script arab;
sub @jeemInit' @setJeemInitAll1 by @jeemInitAll1;
sub @jeemInit' heh-ar.medi by @jeemInitAll1;
sub @jeemInitAll1 heh-ar.medi' by heh-ar.medi.all1;
} jeemInitAll1;

#To replace the inital allograph form of the jeem shape group when followed by class @jeemInitAll2
lookup jeemMediAll2 {
	lookupflag IgnoreMarks RightToLeft;
	script arab;
sub @jeemMedi @jeemMedi' by @jeemMediAll2;
} jeemMediAll2;

#To replace the inital allograph form of kaf when followed by vertical letters
lookup kafInitAll2 {
	lookupflag IgnoreMarks RightToLeft;
	script arab;
sub kaf-ar.init' [kaf-ar.medi kaf-ar.fina lam-ar.medi lam-ar.fina @alefFina] by kaf-ar.init.all2;
} kafInitAll2;

#To replace the medial allograph form of kaf when followed by vertical letters
lookup kafMediAll2 {
	lookupflag IgnoreMarks RightToLeft;
	script arab;
	
sub kaf-ar.medi' [kaf-ar.medi kaf-ar.fina lam-ar.medi lam-ar.fina @alefFina] by kaf-ar.medi.all2;
} kafMediAll2; 

#To replace the allograph form in instances of repeating seen forms
lookup multiple_seens {
	lookupflag IgnoreMarks RightToLeft;
	script arab;
sub [seen-ar.init seen-ar.medi sheen-ar.init sheen-ar.medi] [seen-ar.medi sheen-ar.medi]' by [seen-ar.medi.all1 sheen-ar.medi.all1];
} multiple_seens;

#lookup yehFinaAll1 {
	#lookupflag IgnoreMarks RightToLeft;
	#script arab;
#sub [feh-ar.init qaf-ar.init veh-ar.init] @yehFina' by @yehFinaAll1;
#sub @jeemInit @yehFina' by @yehFinaAll1;
#sub @jeemInit' @yehFinaAll1 by @jeemInitAll1;
#} yehFinaAll1;

#To replace the initial allograph form of sad shape group when followed by the jeem shape group
lookup sadInit_jeem {
	lookupflag IgnoreMarks RightToLeft;
	script arab;
sub [sad-ar.init dad-ar.init]' @jeemMedi by [sad-ar.init.all1 dad-ar.init.all1];
sub [sad-ar.init.all1 dad-ar.init.all1] @jeemMedi' by @jeemMediAll1;
sub [sad-ar.init dad-ar.init]' @jeemFina by [sad-ar.init.all1 dad-ar.init.all1];
sub [sad-ar.init.all1 dad-ar.init.all1] @jeemFina' by @jeemFinaAll1;
} sadInit_jeem;

#To replace the medial allograph form of sad shape group when followed by the jeem shape group
lookup sadMedi_jeem {
	lookupflag IgnoreMarks RightToLeft;
	script arab;
sub [sad-ar.medi dad-ar.medi]' @jeemMedi by [sad-ar.medi.all1 dad-ar.medi.all1];
sub [sad-ar.medi.all1 dad-ar.medi.all1] @jeemMedi' by @jeemMediAll1;
sub [sad-ar.medi dad-ar.medi]' @jeemFina by [sad-ar.medi.all1 dad-ar.medi.all1];
sub [sad-ar.medi.all1 dad-ar.medi.all1] @jeemFina' by @jeemFinaAll1;
} sadMedi_jeem;

#To replace the inital allograph form of sad shape group when followed by meem
lookup sadInit_meem {
	lookupflag IgnoreMarks RightToLeft;
	script arab;
sub [sad-ar.init dad-ar.init]' meem-ar.medi by [sad-ar.init.all1 dad-ar.init.all1];
sub [sad-ar.init.all1 dad-ar.init.all1] meem-ar.medi' by meem-ar.medi.all2;
sub [sad-ar.init dad-ar.init]' meem-ar.fina by [sad-ar.init.all1 dad-ar.init.all1];
sub [sad-ar.init.all1 dad-ar.init.all1] meem-ar.fina' by meem-ar.fina.all2;
} sadInit_meem;

#To replace the medial allograph form of sad shape group when followed by meem
lookup sadMedi_meem {
	lookupflag IgnoreMarks RightToLeft;
	script arab;
sub [sad-ar.medi dad-ar.medi]' meem-ar.medi by [sad-ar.medi.all1 dad-ar.medi.all1];
sub [sad-ar.medi.all1 dad-ar.medi.all1] meem-ar.medi' by meem-ar.medi.all2;
sub [sad-ar.medi dad-ar.medi]' meem-ar.fina by [sad-ar.medi.all1 dad-ar.medi.all1];
sub [sad-ar.medi.all1 dad-ar.medi.all1] meem-ar.fina' by meem-ar.fina.all2;
} sadMedi_meem;
} calt;

feature ss01 {
# To replace calligraphic Arabic diacritics with monolinear ones
sub @ArDiacritics by @ArDiacriticsAlt;
} ss01;

feature ss02 {
# To change the allograph forms of isolated beh shape group
sub @behIsol by @behIsolAll1;
} ss02;

feature ss03 {
# To replace initial and medial kaf with alternative forms
sub [kaf-ar.init.all2 kaf-ar.medi.all2] by [kaf-ar.init.all1 kaf-ar.medi.all1];
} ss03;

feature ss04 {
# To change the allograph forms of sheen to the dotless allograph 1
sub [sheen-ar sheen-ar.fina] by [sheen-ar.all1 sheen-ar.fina.all1];
} ss04;

feature ss05 {
# To change the allograph forms of sheen to the dotless allograph 2
sub [sheen-ar sheen-ar.fina] by [sheen-ar.all2 sheen-ar.fina.all2];
} ss05;

feature ss06 {
# To change the allograph forms of dad to the dotless allograph 1
sub [dad-ar dad-ar.fina] by [dad-ar.all1 dad-ar.fina.all1];
} ss06;

feature ss07 {
# To change the allograph forms of dad to the dotless allograph 2
sub [dad-ar dad-ar.fina] by [dad-ar.all2 dad-ar.fina.all2];
} ss07;

feature ss08 {
# To replace all traditional Ruq’ah medial jeem shape group to a flat version to curb word height
sub @jeemMedi by @jeemMediAll2;
} ss08;

feature lnum {
# automatic
sub zero.osf by zero;
sub one.osf by one;
sub two.osf by two;
sub three.osf by three;
sub four.osf by four;
sub five.osf by five;
sub six.osf by six;
sub seven.osf by seven;
sub eight.osf by eight;
sub nine.osf by nine;
} lnum;

feature onum {
# automatic
sub zero by zero.osf;
sub one by one.osf;
sub two by two.osf;
sub three by three.osf;
sub four by four.osf;
sub five by five.osf;
sub six by six.osf;
sub seven by seven.osf;
sub eight by eight.osf;
sub nine by nine.osf;
} onum;

feature ss09 {
# To change 
sub @ParentDefault by @ParentAlt;
} ss09;

